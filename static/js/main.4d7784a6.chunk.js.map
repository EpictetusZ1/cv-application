{"version":3,"sources":["styles/StyleMain.module.css","components/PersonalBlock.js","components/EducationBlock.js","components/WorkBlock.js","components/DisplayPersonal.js","components/DisplayEducation.js","components/DisplayWork.js","components/Main.js","App.js","index.js","styles/DisplayData.module.css"],"names":["module","exports","PersonalBlock","props","useState","data","personalData","setPersonalData","handleChange","e","target","name","value","className","styles","dataBlock","onSubmit","updateParent","formEl","htmlFor","type","id","placeholder","onChange","email","phone","city","submitBtn","EducationBlock","eduData","setEduData","schoolName","degreeName","startYear","endYear","WorkBlock","workData","setWorkData","companyName","position","jobDuties","employStart","employEnd","DisplayPersonal","fields","dataObj","btnRef","resumeBlock","editContent","onClick","object","hr","formatData","DisplayEducation","DisplayWork","myArray","dataArray","largeAnswer","map","job","index","Main","educationData","setEducationData","initWorkState","uniqid","jobs","setJobs","personal","educational","work","educationalBtn","workBtn","showEduFields","showWorkFields","isDisplayed","setIsDisplayed","toggleButton","btnState","btnName","addSection","togglePersonal","toggleEducational","resumeMain","addDataHalf","obj","preventDefault","resumeHalf","find","o","curr","indexOf","splice","edit","App","backGr","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d7784a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backGr\":\"StyleMain_backGr__tfE8q\",\"title\":\"StyleMain_title__2Mjkq\",\"resumeMain\":\"StyleMain_resumeMain__27ydn\",\"addDataHalf\":\"StyleMain_addDataHalf__1TBdY\",\"resumeHalf\":\"StyleMain_resumeHalf__3C7fY\",\"dataBlock\":\"StyleMain_dataBlock__1V9Eq\",\"formEl\":\"StyleMain_formEl__3Nops\",\"submitBtn\":\"StyleMain_submitBtn__2B3Df\",\"addSection\":\"StyleMain_addSection__1upcL\",\"hr\":\"StyleMain_hr__IFgux\"};","import React, {useState} from \"react\";\nimport styles from \"../styles/StyleMain.module.css\"\n\nfunction PersonalBlock(props) {\n    const [personalData, setPersonalData] = useState(props.data)\n\n    const handleChange = (e) => {\n        const target = e.target\n        const name = target.name\n        setPersonalData({...personalData, [name]: target.value })\n    }\n\n    return (\n        <div className={styles.dataBlock}>\n            <form onSubmit={ (e) => props.updateParent(e, personalData) }>\n                <h2>Add Personal Information: </h2>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"personName\">Name: </label>\n                    <input type=\"text\"\n                           id=\"personName\"\n                           name=\"name\"\n                           placeholder=\"Name\"\n                           value={personalData.name}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"personEmail\">Email: </label>\n                    <input type=\"text\"\n                           id=\"personEmail\"\n                           name=\"email\"\n                           placeholder=\"Email\"\n                           value={personalData.email}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"personPhone\">Phone: </label>\n                    <input type=\"text\"\n                           id=\"personPhone\"\n                           name=\"phone\"\n                           placeholder=\"Phone\"\n                           value={personalData.phone}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"personCity\">City: </label>\n                    <input type=\"text\"\n                           id=\"personCity\"\n                           name=\"city\"\n                           placeholder=\"City\"\n                           value={personalData.city}\n                           onChange={handleChange}\n                    />\n                </div>\n                <button className={styles.submitBtn} type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonalBlock","import React, {useState} from \"react\";\nimport styles from \"../styles/StyleMain.module.css\"\n\nfunction EducationBlock(props) {\n    const [eduData, setEduData] = useState(props.data)\n\n    const handleChange = (e) => {\n        const target = e.target\n        const name = target.name\n        setEduData({...eduData, [name]: target.value })\n    }\n\n    return (\n        <div className={`${styles.dataBlock} educationInfo`}>\n            <form onSubmit={ (e) => props.updateParent(e, eduData) }>\n                <h2>Add Education Information: </h2>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"school\">School Name: </label>\n                    <input type=\"text\"\n                           id=\"school\"\n                           name=\"schoolName\"\n                           placeholder=\"Name\"\n                           value={eduData.schoolName}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"degree\">Degree Name: </label>\n                    <input type=\"text\"\n                           id=\"degree\"\n                           name=\"degreeName\"\n                           placeholder=\"Degree\"\n                           value={eduData.degreeName}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"startYear\">Start Year: </label>\n                    <input type=\"text\"\n                           id=\"startYear\"\n                           name=\"startYear\"\n                           placeholder=\"Start\"\n                           value={eduData.startYear}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"endYear\">End Year: </label>\n                    <input type=\"text\"\n                           id=\"endYear\"\n                           name=\"endYear\"\n                           placeholder=\"End Year\"\n                           value={eduData.endYear}\n                           onChange={handleChange}\n                    />\n                </div>\n                <button className={styles.submitBtn} type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default EducationBlock","import React, {useState} from \"react\";\nimport styles from \"../styles/StyleMain.module.css\"\n\n\nfunction WorkBlock(props) {\n    const [workData, setWorkData] = useState(props.data)\n\n    const handleChange = (e) => {\n        const target = e.target\n        const name = target.name\n        setWorkData({...workData, [name]: target.value})\n    }\n\n    return (\n        <div className={styles.dataBlock}>\n            <form onSubmit={ (e) => props.updateParent(e, workData) }>\n                <h2>Add Work Information: </h2>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"Company\">Company: </label>\n                    <input type=\"text\"\n                           id=\"companyName\"\n                           name=\"companyName\"\n                           placeholder=\"Company Name\"\n                           value={workData.companyName}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"position\">Position Title: </label>\n                    <input type=\"text\"\n                           id=\"position\"\n                           name=\"position\"\n                           placeholder=\"Position\"\n                           value={workData.position}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"duties\">Job Duties: </label>\n                    <input type=\"text\"\n                           id=\"jobDuties\"\n                           name=\"jobDuties\"\n                           placeholder=\"Job Duties\"\n                           value={workData.jobDuties}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"employStart\">Start Year: </label>\n                    <input type=\"text\"\n                           id=\"employStart\"\n                           name=\"employStart\"\n                           placeholder=\"Start Year\"\n                           value={workData.employStart}\n                           onChange={handleChange}\n                    />\n                </div>\n                <div className={styles.formEl}>\n                    <label htmlFor=\"employEnd\">End Year: </label>\n                    <input type=\"text\"\n                           id=\"employEnd\"\n                           name=\"employEnd\"\n                           placeholder=\"End Year\"\n                           value={workData.employEnd}\n                           onChange={handleChange}\n                    />\n                </div>\n                <button className={styles.submitBtn} type=\"submit\">\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default WorkBlock","import React from \"react\";\nimport styles from \"../styles/DisplayData.module.css\"\n\nfunction DisplayPersonal(props) {\n    const { ...fields } = props.dataObj\n    const btnRef = props.btnRef\n\n    const formatData = (object) => {\n        const { name, email, phone, city} = object\n        return (\n            <div>\n                <h2>General Information: </h2>\n                <hr className={styles.hr}/>\n                <p> <b>Name: </b> {name}</p>\n                <p> <b>Email: </b> {email}</p>\n                <p> <b>Phone: </b> {phone}</p>\n                <p> <b>City: </b> {city}</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className={styles.resumeBlock}>\n           <button className={styles.editContent} onClick={btnRef}>Edit</button>\n            {formatData(fields)}\n        </div>\n    )\n}\n\nexport default DisplayPersonal","import React from \"react\";\nimport styles from \"../styles/DisplayData.module.css\"\n\nfunction DisplayEducation(props) {\n    const { ...fields } = props.dataObj\n    const btnRef = props.btnRef\n\n    const formatData = (object) => {\n        const { schoolName, degreeName, startYear, endYear} = object\n        return (\n            <div>\n                <h2>Educational Information: </h2>\n                <hr className={styles.hr} />\n                <p> <b>School: </b> {schoolName}</p>\n                <p> <b>Degree: </b> {degreeName}</p>\n                <p> <b>From: </b> {startYear} - {endYear}</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className={styles.resumeBlock} >\n            <button className={styles.editContent} onClick={btnRef}>Edit</button>\n            {formatData(fields)}\n        </div>\n    )\n}\n\nexport default DisplayEducation","import React from \"react\";\nimport styles from \"../styles/DisplayData.module.css\"\n\nfunction DisplayWork(props) {\n    const btnRef = props.btnRef\n    const myArray = props.dataArray\n\n    const formatData = (object) => {\n\n        const {companyName, position, jobDuties, employStart, employEnd} = object\n        return (\n            <div>\n                <p><b>Company: </b> {companyName}</p>\n                <p><b>Position: </b> {position}</p>\n                <span className={styles.largeAnswer}>\n                   <b>Job Duties:</b><p>{jobDuties}</p>\n                </span>\n                <p><b>Employed through: </b> {employStart} - {employEnd}</p>\n                <hr/>\n            </div>\n        )\n    }\n\n   return (\n       <div className={styles.resumeBlock}>\n           <h2>Work Information: </h2>\n           <hr className={styles.hr}/>\n           <div>\n               { myArray.map( (job, index) => {\n                   return <div key={myArray[index].id}>\n                       <button className={styles.editContent}\n                               onClick={ () => {\n                                   btnRef(myArray[index].id)\n                               }}\n                       >Edit</button>\n                       {formatData(job)}\n                   </div>\n               })}\n           </div>\n       </div>\n   )\n}\n\nexport default DisplayWork","import React, { useState } from \"react\";\nimport PersonalBlock from \"./PersonalBlock\";\nimport EducationBlock from \"./EducationBlock\";\nimport WorkBlock from \"./WorkBlock\";\nimport DisplayPersonal from \"./DisplayPersonal\";\nimport DisplayEducation from \"./DisplayEducation\";\nimport DisplayWork from \"./DisplayWork\";\nimport uniqid from \"uniqid\";\nimport styles from \"../styles/StyleMain.module.css\"\n\nfunction Main() {\n\n    const [personalData, setPersonalData] = useState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        city: \"\"\n    })\n\n    const [educationData, setEducationData] = useState({\n        schoolName: \"\",\n        degreeName: \"\",\n        startYear: \"\",\n        endYear: \"\"\n    })\n\n    const initWorkState = {\n        companyName: \"\",\n        position: \"\",\n        jobDuties: \"\",\n        employStart: \"\",\n        employEnd: \"\",\n        id: uniqid()\n    }\n\n    const [workData, setWorkData] = useState(initWorkState)\n\n    const [jobs, setJobs] = useState([])\n\n    const [isDisplayed, setIsDisplayed] = useState({\n        personal: false,\n        educational: false,\n        work: false,\n        educationalBtn: true,\n        workBtn: true,\n        showEduFields: false,\n        showWorkFields: false\n    })\n\n    const toggleButton = (btnState, btnName) => {\n        if (btnState) {\n            switch (btnName) {\n                default:\n                case \"edu\":\n                    return (\n                        <button className={styles.addSection}\n                                onClick={() => {\n                                    setIsDisplayed({...isDisplayed,\n                                        educationalBtn: false,\n                                        showEduFields: true\n                                    })\n                                }}\n                        > Add Education Information </button>\n                    )\n                case \"work\":\n                    return (\n                        <button className={styles.addSection}\n                                onClick={() => {\n                                    setIsDisplayed({...isDisplayed,\n                                        workBtn: false,\n                                        showWorkFields: true\n                                    })\n                                }}\n                        > Add Work Experience </button>\n                    )\n            }\n        }\n    }\n\n    const togglePersonal = () => {\n        setIsDisplayed({ ...isDisplayed, personal: !isDisplayed.personal})\n    }\n\n    const toggleEducational = () => {\n        setIsDisplayed({ ...isDisplayed,\n            educational: !isDisplayed.educational,\n            showEduFields: !isDisplayed.showEduFields\n        })\n    }\n\n    const toggleWork = () => {\n        setIsDisplayed({ ...isDisplayed,\n            work: !isDisplayed.work,\n            showWorkFields: !isDisplayed.showWorkFields,\n            workBtn: !isDisplayed.workBtn\n        })\n    }\n\n    const handleSubmitPersonal = (e, obj) => {\n        e.preventDefault()\n        togglePersonal()\n        setPersonalData({...obj})\n    }\n\n    const handleSubmitEducation = (e, obj) => {\n        e.preventDefault()\n        toggleEducational()\n        setEducationData({...obj})\n    }\n\n    const handleSubmitWork = (e, obj) => {\n        e.preventDefault()\n        setJobs([...jobs, obj])\n        setWorkData(initWorkState)\n        setIsDisplayed({ ...isDisplayed,\n            work: true,\n            showWorkFields: !isDisplayed.showWorkFields,\n            workBtn: !isDisplayed.workBtn\n        })\n    }\n\n    const editWork = (id) => {\n        let target = jobs.find(o => o.id === id) // Find the obj. with the id you wish to edit\n        let curr = jobs\n        let index = curr.indexOf(target)\n        let [edit] = curr.splice(index, 1)\n        setWorkData(edit)\n        toggleWork()\n    }\n\n    return (\n        <div className={styles.resumeMain}>\n            <div className={styles.addDataHalf}>\n                {/* Personal Info */}\n                { !isDisplayed.personal &&\n                    <PersonalBlock data={personalData}\n                                   updateParent={handleSubmitPersonal}\n                    /> }\n\n                {/* Educational Info */}\n                { toggleButton(isDisplayed.educationalBtn, \"edu\") }\n                { isDisplayed.showEduFields && <EducationBlock data={educationData}\n                                                               updateParent={handleSubmitEducation}\n                />}\n                {/* Practical Info */}\n                { toggleButton(isDisplayed.workBtn, \"work\") }\n                { isDisplayed.showWorkFields && <WorkBlock data={workData}\n                                                           updateParent={handleSubmitWork}\n                />}\n            </div>\n            {/* Render Data onto 'CV' */}\n            <div className={styles.resumeHalf}>\n                { isDisplayed.personal && <DisplayPersonal dataObj={personalData}\n                                                           btnRef={togglePersonal}\n                />}\n                { isDisplayed.educational && <DisplayEducation dataObj={educationData}\n                                                               btnRef={toggleEducational}\n                /> }\n                { isDisplayed.work && <DisplayWork dataArray={jobs}\n                                                   btnRef={editWork}\n                />}\n            </div>\n        </div>\n    )\n}\n\nexport default Main","import styles from \"./styles/StyleMain.module.css\"\nimport Main from \"./components/Main\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n      <div className={styles.backGr}>\n          <h1 className={styles.title}> CV Generator App</h1>\n          <Main />\n\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resumeBlock\":\"DisplayData_resumeBlock__2qya0\",\"largeAnswer\":\"DisplayData_largeAnswer__8XAv1\",\"editContent\":\"DisplayData_editContent__CRDGb\",\"hr\":\"DisplayData_hr__1OpUL\"};"],"sourceRoot":""}